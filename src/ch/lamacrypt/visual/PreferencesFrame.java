/* 
 * Copyright (c) 2016, LamaCrypt
 * All rights reserved.
 *
 * The LamaCrypt client software and its source code are available
 * under the LamaCrypt Software License: 
 * https://github.com/LamaCrypt/desktop-client/blob/master/LICENSE.md
 */
package ch.lamacrypt.visual;

import ch.lamacrypt.internal.Settings;
import ch.lamacrypt.internal.crypto.DefaultCipher;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 * Contains various settings to be changed by the user
 *
 * @author LamaGuy
 */
public class PreferencesFrame extends javax.swing.JFrame {

    private int workFactorIndex;
    private boolean isDlDir,
            startup = true;
    private JFileChooser fc;

    /**
     * Creates new form PreferencesFrame
     */
    public PreferencesFrame() {
        initComponents();
        setLocationRelativeTo(null);
        loadParams();
        startup = false;
    }

    /**
     * Sets the current settings into the Settings class
     */
    private void setParams() {
        // download directory settings
        if (isDlDir) {
            if (!dlDirPath.getText().endsWith("/")) {
                dlDirPath.setText(dlDirPath.getText() + "/");
            }
            Settings.setDLDir(dlDirPath.getText());
        }
        Settings.setIsDLDIR(isDlDir);

        switch (workFactorIndex) {
            case 0:
                DefaultCipher.setSCryptFactor(20);
                break;
            case 1:
                DefaultCipher.setSCryptFactor(21);
                break;
            case 2:
                DefaultCipher.setSCryptFactor(22);
                break;
        }
    }

    /**
     * Load settings from the Settings class
     */
    private void loadParams() {
        // download directory settings
        if (Settings.isDLDir()) {
            dlDirPath.setText(Settings.getDLDir());
            dlDirPathButton.doClick();
        } else {
            dlDirAskButton.doClick();
        }
        isDlDir = Settings.isDLDir();

        switch (DefaultCipher.getSCryptFactor()) {
            case 20:
                workFactorComboBox.setSelectedIndex(0);
                workFactorIndex = 0;
                break;
            case 21:
                workFactorComboBox.setSelectedIndex(1);
                workFactorIndex = 1;
                break;
            case 22:
                workFactorComboBox.setSelectedIndex(2);
                workFactorIndex = 2;
                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        workingDirChoice = new javax.swing.ButtonGroup();
        applyButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        OKButton = new javax.swing.JButton();
        settingsPane = new javax.swing.JTabbedPane();
        generalSettingsPanel = new javax.swing.JPanel();
        dlDirLabel = new javax.swing.JLabel();
        dlDirBrowseButton = new javax.swing.JButton();
        dlDirPath = new javax.swing.JTextField();
        dlDirPathButton = new javax.swing.JRadioButton();
        dlDirAskButton = new javax.swing.JRadioButton();
        dlDirAskLabel = new javax.swing.JLabel();
        languageLabel = new javax.swing.JLabel();
        languageChoice = new javax.swing.JComboBox<>();
        securitySettingsPanel = new javax.swing.JPanel();
        workFactorLabel = new javax.swing.JLabel();
        workFactorComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Preferences");
        setResizable(false);
        setSize(new java.awt.Dimension(570, 440));

        applyButton.setText("Apply");
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        OKButton.setText("OK");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        dlDirLabel.setText("Download directory");

        dlDirBrowseButton.setText("Browse");
        dlDirBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlDirBrowseButtonActionPerformed(evt);
            }
        });

        workingDirChoice.add(dlDirPathButton);

        workingDirChoice.add(dlDirAskButton);
        dlDirAskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlDirAskButtonActionPerformed(evt);
            }
        });

        dlDirAskLabel.setText("Ask each time");

        languageLabel.setText("Language");

        languageChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "English", "French" }));
        languageChoice.setEnabled(false);

        javax.swing.GroupLayout generalSettingsPanelLayout = new javax.swing.GroupLayout(generalSettingsPanel);
        generalSettingsPanel.setLayout(generalSettingsPanelLayout);
        generalSettingsPanelLayout.setHorizontalGroup(
            generalSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalSettingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(generalSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dlDirLabel)
                    .addComponent(languageLabel))
                .addGap(40, 40, 40)
                .addGroup(generalSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(languageChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(generalSettingsPanelLayout.createSequentialGroup()
                        .addComponent(dlDirPathButton)
                        .addGap(18, 18, 18)
                        .addComponent(dlDirPath, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dlDirBrowseButton))
                    .addGroup(generalSettingsPanelLayout.createSequentialGroup()
                        .addComponent(dlDirAskButton)
                        .addGap(18, 18, 18)
                        .addComponent(dlDirAskLabel)))
                .addContainerGap())
        );
        generalSettingsPanelLayout.setVerticalGroup(
            generalSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalSettingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(generalSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(languageLabel)
                    .addComponent(languageChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(generalSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(generalSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(dlDirPathButton, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(generalSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dlDirBrowseButton)
                            .addComponent(dlDirPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(generalSettingsPanelLayout.createSequentialGroup()
                        .addComponent(dlDirLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)))
                .addGap(6, 6, 6)
                .addGroup(generalSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dlDirAskButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dlDirAskLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(294, Short.MAX_VALUE))
        );

        settingsPane.addTab("General", generalSettingsPanel);

        workFactorLabel.setText("Key derivation work factor");

        workFactorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fast (less secure)", "Normal", "Slow (more secure)" }));
        workFactorComboBox.setSelectedIndex(1);
        workFactorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workFactorComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout securitySettingsPanelLayout = new javax.swing.GroupLayout(securitySettingsPanel);
        securitySettingsPanel.setLayout(securitySettingsPanelLayout);
        securitySettingsPanelLayout.setHorizontalGroup(
            securitySettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(securitySettingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(workFactorLabel)
                .addGap(18, 18, 18)
                .addComponent(workFactorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(271, Short.MAX_VALUE))
        );
        securitySettingsPanelLayout.setVerticalGroup(
            securitySettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(securitySettingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(securitySettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(workFactorLabel)
                    .addComponent(workFactorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(372, Short.MAX_VALUE))
        );

        settingsPane.addTab("Security", securitySettingsPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(OKButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(applyButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cancelButton))
                    .addComponent(settingsPane))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(settingsPane)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(applyButton)
                    .addComponent(cancelButton)
                    .addComponent(OKButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        setParams();
        this.dispose();
    }//GEN-LAST:event_OKButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        setParams();
    }//GEN-LAST:event_applyButtonActionPerformed

    private void dlDirBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlDirBrowseButtonActionPerformed
        // open a FileChooser to select the download folder
        fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fc.setMultiSelectionEnabled(false);
        fc.setVisible(true);

        if (fc.showDialog(this, "Open") == JFileChooser.APPROVE_OPTION) {
            String dlDir = fc.getSelectedFile().getPath().replace("\\", "/");
            if (!dlDir.endsWith("/")) {
                dlDir += "/";
            }
            dlDirPath.setText(dlDir);
            dlDirPathButton.setSelected(true);
            isDlDir = true;
        }
    }//GEN-LAST:event_dlDirBrowseButtonActionPerformed

    private void dlDirAskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlDirAskButtonActionPerformed
        dlDirAskButton.setSelected(true);
        isDlDir = false;
    }//GEN-LAST:event_dlDirAskButtonActionPerformed

    private void workFactorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workFactorComboBoxActionPerformed
        if (!startup) {
            String msg = "Are you sure you wish to change this security setting ?";
            if (workFactorComboBox.getSelectedIndex() == 0) {
                msg += "\nFaster key derivation makes decryption easier !";
            }
            
            int res = JOptionPane.showConfirmDialog(this, msg, "Change settings",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            if (res == JOptionPane.YES_OPTION) {
                workFactorIndex = workFactorComboBox.getSelectedIndex();
            } else {
                workFactorComboBox.setSelectedIndex(workFactorIndex);
            }
        }
    }//GEN-LAST:event_workFactorComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PreferencesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PreferencesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PreferencesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PreferencesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new PreferencesFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OKButton;
    private javax.swing.JButton applyButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JRadioButton dlDirAskButton;
    private javax.swing.JLabel dlDirAskLabel;
    private javax.swing.JButton dlDirBrowseButton;
    private javax.swing.JLabel dlDirLabel;
    private javax.swing.JTextField dlDirPath;
    private static javax.swing.JRadioButton dlDirPathButton;
    private javax.swing.JPanel generalSettingsPanel;
    private javax.swing.JComboBox<String> languageChoice;
    private javax.swing.JLabel languageLabel;
    private javax.swing.JPanel securitySettingsPanel;
    private javax.swing.JTabbedPane settingsPane;
    private static javax.swing.JComboBox<String> workFactorComboBox;
    private javax.swing.JLabel workFactorLabel;
    private javax.swing.ButtonGroup workingDirChoice;
    // End of variables declaration//GEN-END:variables
}
